{"ast":null,"code":"var _jsxFileName = \"/home/connor/Documents/Senior_Fall/wellspokn/src/components/Recorder.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ReactMic } from 'react-mic';\nimport Button from '@material-ui/core/Button';\nexport default class Recorder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.constuseStyles = makeStyles(theme => ({\n      avatar: {\n        backgroundColor: blue[100],\n        color: blue[600]\n      },\n      fab: {\n        position: 'fixed',\n        margin: theme.spacing(1),\n        bottom: theme.spacing(2),\n        right: theme.spacing(2)\n      }\n    }));\n\n    this.startRecording = () => {\n      this.setState({\n        record: true\n      });\n    };\n\n    this.stopRecording = () => {\n      this.setState({\n        record: false\n      });\n    };\n\n    this.state = {\n      record: false\n    };\n  }\n\n  onData(recordedBlob) {\n    console.log('chunk of real-time data is: ', recordedBlob);\n  }\n\n  onStop(recordedBlob) {\n    console.log('recordedBlob is: ', recordedBlob);\n    const audio = new Audio(recordedBlob.blobURL);\n    audio.play();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(ReactMic, {\n      record: this.state.record,\n      className: \"sound-wave\",\n      onStop: this.onStop,\n      onData: this.onData,\n      strokeColor: \"#000000\",\n      backgroundColor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.startRecording,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Start\"), React.createElement(Button, {\n      onClick: this.stopRecording,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Stop\"));\n  }\n\n}","map":{"version":3,"sources":["/home/connor/Documents/Senior_Fall/wellspokn/src/components/Recorder.jsx"],"names":["React","makeStyles","ReactMic","Button","Recorder","Component","constructor","props","constuseStyles","theme","avatar","backgroundColor","blue","color","fab","position","margin","spacing","bottom","right","startRecording","setState","record","stopRecording","state","onData","recordedBlob","console","log","onStop","audio","Audio","blobURL","play","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAOnBC,cAPmB,GAOFP,UAAU,CAACQ,KAAK,KAAK;AACvCC,MAAAA,MAAM,EAAE;AACPC,QAAAA,eAAe,EAAEC,IAAI,CAAC,GAAD,CADd;AAEPC,QAAAA,KAAK,EAAED,IAAI,CAAC,GAAD;AAFJ,OAD+B;AAKvCE,MAAAA,GAAG,EAAE;AACJC,QAAAA,QAAQ,EAAE,OADN;AAEJC,QAAAA,MAAM,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CAFJ;AAGJC,QAAAA,MAAM,EAAET,KAAK,CAACQ,OAAN,CAAc,CAAd,CAHJ;AAIJE,QAAAA,KAAK,EAAEV,KAAK,CAACQ,OAAN,CAAc,CAAd;AAJH;AALkC,KAAL,CAAN,CAPR;;AAAA,SAoBnBG,cApBmB,GAoBF,MAAM;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE;AADI,OAAd;AAGD,KAxBkB;;AAAA,SA0BnBC,aA1BmB,GA0BH,MAAM;AACpB,WAAKF,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE;AADI,OAAd;AAGD,KA9BkB;;AAEjB,SAAKE,KAAL,GAAa;AACXF,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AA2BDG,EAAAA,MAAM,CAACC,YAAD,EAAe;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,YAA5C;AACD;;AAEDG,EAAAA,MAAM,CAACH,YAAD,EAAe;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,YAAjC;AACA,UAAMI,KAAK,GAAG,IAAIC,KAAJ,CAAUL,YAAY,CAACM,OAAvB,CAAd;AACGF,IAAAA,KAAK,CAACG,IAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAE,KAAKV,KAAL,CAAWF,MADrB;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,MAAM,EAAE,KAAKO,MAHf;AAIE,MAAA,MAAM,EAAE,KAAKJ,MAJf;AAKE,MAAA,WAAW,EAAC,SALd;AAME,MAAA,eAAe,EAAC,OANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKL,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,EASE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKG,aAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CADF;AAaD;;AAzDmD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ReactMic } from 'react-mic';\nimport Button from '@material-ui/core/Button'\n \nexport default class Recorder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      record: false\n    }\n  }\n\n  constuseStyles = makeStyles(theme => ({\n\tavatar: {\n\t\tbackgroundColor: blue[100],\n\t\tcolor: blue[600],\n\t},\n\tfab: {\n\t\tposition: 'fixed',\n\t\tmargin: theme.spacing(1),\n\t\tbottom: theme.spacing(2),\n\t\tright: theme.spacing(2),\n\t},\n}));\n \n  startRecording = () => {\n    this.setState({\n      record: true\n    });\n  }\n \n  stopRecording = () => {\n    this.setState({\n      record: false\n    });\n  }\n \n  onData(recordedBlob) {\n    console.log('chunk of real-time data is: ', recordedBlob);\n  }\n \n  onStop(recordedBlob) {\n\tconsole.log('recordedBlob is: ', recordedBlob);\n\tconst audio = new Audio(recordedBlob.blobURL);\n    audio.play();\n  }\n \n  render() {\n    return (\n      <div>\n        <ReactMic\n          record={this.state.record}\n          className=\"sound-wave\"\n          onStop={this.onStop}\n          onData={this.onData}\n          strokeColor=\"#000000\"\n          backgroundColor=\"white\" />\n        <Button onClick={this.startRecording}>Start</Button>\n        <Button onClick={this.stopRecording}>Stop</Button>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}