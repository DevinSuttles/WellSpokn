{"ast":null,"code":"import React,{useState,useEffect}from'react';import{makeStyles}from'@material-ui/core/styles';import Card from'@material-ui/core/Card';import CardActions from'@material-ui/core/CardActions';import CardContent from'@material-ui/core/CardContent';import ButtonBase from'@material-ui/core/ButtonBase';import Grid from'@material-ui/core/Grid';import NavBar from'./NavBar';import BarGraph from'./BarGraph';import Recorder from'./Recorder';var useStyles=makeStyles({card:{minWidth:275,margin:30}});export default function SpeechPage(props){var classes=useStyles();var searchSpeeches=function searchSpeeches(searchTerm){//will eventually look for word and highlight\n};var data=[{\"y\":8,\"x\":\"Tempo\"},{\"y\":4,\"x\":\"Grammar\"},{\"y\":5,\"x\":\"Filler Words\"},{\"y\":10,\"x\":\"Repetition\"},{\"y\":5,\"x\":\"Monotone\"}];return React.createElement(\"div\",null,React.createElement(NavBar,{SearchSpeeches:searchSpeeches}),React.createElement(\"div\",{id:\"cards\"},React.createElement(Grid,{container:true,spacing:2,direction:\"row\",justify:\"flex-start\",alignItems:\"baseline\"},React.createElement(Grid,{item:true,sm:6,xs:\"auto\"},React.createElement(Card,{className:classes.card},React.createElement(CardActions,null,React.createElement(ButtonBase,null,React.createElement(CardContent,null,React.createElement(\"b\",null,props.history.location.state.name),React.createElement(\"br\",null),React.createElement(\"p\",{className:classes.p,align:\"left\"},props.history.location.state.content)))))),React.createElement(Grid,{item:true,sm:\"auto\",xs:\"auto\"},React.createElement(Card,{className:classes.card},React.createElement(CardContent,null,React.createElement(\"b\",null,\"Error Metrics\"),React.createElement(BarGraph,{data:data})))))));}","map":{"version":3,"sources":["/home/connor/Documents/Senior_Fall/wellspokn/src/components/SpeechPage.jsx"],"names":["React","useState","useEffect","makeStyles","Card","CardActions","CardContent","ButtonBase","Grid","NavBar","BarGraph","Recorder","useStyles","card","minWidth","margin","SpeechPage","props","classes","searchSpeeches","searchTerm","data","history","location","state","name","p","content"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CAEA,OAASC,UAAT,KAA2B,0BAA3B,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,+BAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,8BAAvB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CAEA,GAAMC,CAAAA,SAAS,CAAGT,UAAU,CAAC,CAC5BU,IAAI,CAAE,CACLC,QAAQ,CAAE,GADL,CAELC,MAAM,CAAE,EAFH,CADsB,CAAD,CAA5B,CAOA,cAAe,SAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CACzC,GAAMC,CAAAA,OAAO,CAAGN,SAAS,EAAzB,CAEA,GAAMO,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,UAAD,CAAgB,CACtC;AACA,CAFD,CAIA,GAAMC,CAAAA,IAAI,CAAG,CACZ,CAAE,IAAK,CAAP,CAAU,IAAK,OAAf,CADY,CAEZ,CAAE,IAAK,CAAP,CAAU,IAAK,SAAf,CAFY,CAGZ,CAAE,IAAK,CAAP,CAAU,IAAK,cAAf,CAHY,CAIZ,CAAE,IAAK,EAAP,CAAW,IAAK,YAAhB,CAJY,CAKZ,CAAE,IAAK,CAAP,CAAU,IAAK,UAAf,CALY,CAAb,CAQA,MACC,gCACC,oBAAC,MAAD,EAAQ,cAAc,CAAEF,cAAxB,EADD,CAEC,2BAAK,EAAE,CAAC,OAAR,EACC,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAE,CAAzB,CACC,SAAS,CAAC,KADX,CAEC,OAAO,CAAC,YAFT,CAGC,UAAU,CAAC,UAHZ,EAIC,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,CAAf,CAAkB,EAAE,CAAE,MAAtB,EACC,oBAAC,IAAD,EAAM,SAAS,CAAED,OAAO,CAACL,IAAzB,EACC,oBAAC,WAAD,MACC,oBAAC,UAAD,MACC,oBAAC,WAAD,MACC,6BAAII,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BC,IAAjC,CADD,CAC2C,8BAD3C,CAEC,yBAAG,SAAS,CAAEP,OAAO,CAACQ,CAAtB,CAAyB,KAAK,CAAC,MAA/B,EAAuCT,KAAK,CAACK,OAAN,CAAcC,QAAd,CAAuBC,KAAvB,CAA6BG,OAApE,CAFD,CADD,CADD,CADD,CADD,CAJD,CAgBC,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,MAAf,CAAuB,EAAE,CAAE,MAA3B,EACC,oBAAC,IAAD,EAAM,SAAS,CAAET,OAAO,CAACL,IAAzB,EACC,oBAAC,WAAD,MACC,6CADD,CAEC,oBAAC,QAAD,EAAU,IAAI,CAAEQ,IAAhB,EAFD,CADD,CADD,CAhBD,CADD,CAFD,CADD,CAgCA","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Grid from '@material-ui/core/Grid';\nimport NavBar from './NavBar';\nimport BarGraph from './BarGraph';\nimport Recorder from './Recorder';\n\nconst useStyles = makeStyles({\n\tcard: {\n\t\tminWidth: 275,\n\t\tmargin: 30,\n\t},\n\n});\nexport default function SpeechPage(props) {\n\tconst classes = useStyles();\n\n\tconst searchSpeeches = (searchTerm) => {\n\t\t//will eventually look for word and highlight\n\t}\n\n\tconst data = [\n\t\t{ \"y\": 8, \"x\": \"Tempo\" },\n\t\t{ \"y\": 4, \"x\": \"Grammar\" },\n\t\t{ \"y\": 5, \"x\": \"Filler Words\" },\n\t\t{ \"y\": 10, \"x\": \"Repetition\" },\n\t\t{ \"y\": 5, \"x\": \"Monotone\" },\n\t];\n\n\treturn (\n\t\t<div>\n\t\t\t<NavBar SearchSpeeches={searchSpeeches} />\n\t\t\t<div id=\"cards\">\n\t\t\t\t<Grid container spacing={2}\n\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\talignItems=\"baseline\">\n\t\t\t\t\t<Grid item sm={6} xs={\"auto\"}>\n\t\t\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t\t\t<CardActions>\n\t\t\t\t\t\t\t\t<ButtonBase>\n\t\t\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t\t\t<b>{props.history.location.state.name}</b><br />\n\t\t\t\t\t\t\t\t\t\t<p className={classes.p} align=\"left\">{props.history.location.state.content}</p>\n\t\t\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t\t\t</ButtonBase>\n\t\t\t\t\t\t\t</CardActions>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item sm={\"auto\"} xs={\"auto\"}>\n\t\t\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<b>Error Metrics</b>\n\t\t\t\t\t\t\t\t<BarGraph data={data} />\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n"]},"metadata":{},"sourceType":"module"}