{"ast":null,"code":"import _slicedToArray from \"/home/connor/Documents/Senior_Fall/wellspokn/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/connor/Documents/Senior_Fall/wellspokn/src/components/NewSpeech.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport UploadIcon from '@material-ui/icons/Publish';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { blue } from '@material-ui/core/colors';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nconst options = ['Record New Speech', 'Upload Existing Speech'];\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    backgroundColor: blue[100],\n    color: blue[600]\n  },\n  fab: {\n    position: 'absolute',\n    margin: theme.spacing(1),\n    bottom: theme.spacing(2),\n    right: theme.spacing(2)\n  }\n}));\n\nfunction SimpleDialog(props) {\n  const classes = useStyles();\n  const onClose = props.onClose,\n        selectedValue = props.selectedValue,\n        open = props.open;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return React.createElement(Dialog, {\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-dialog-title\",\n    open: open,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(DialogTitle, {\n    id: \"simple-dialog-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Create New Project\"), React.createElement(List, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, options.map(option => React.createElement(ListItem, {\n    button: true,\n    onClick: () => handleListItemClick(option),\n    key: option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(ListItemAvatar, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, option === 'Record New Speech' && React.createElement(MicIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), option === 'Upload Existing Speech' && React.createElement(UploadIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }))), React.createElement(ListItemText, {\n    primary: option,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })))));\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\nexport default function NewSpeech() {\n  const classes = useStyles();\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        open = _React$useState2[0],\n        setOpen = _React$useState2[1];\n\n  const _React$useState3 = React.useState(options[1]),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        selectedValue = _React$useState4[0],\n        setSelectedValue = _React$useState4[1];\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    color: \"primary\",\n    \"aria-label\": \"add\",\n    className: classes.fab,\n    onClick: handleClickOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(AddIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(SimpleDialog, {\n    selectedValue: selectedValue,\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/home/connor/Documents/Senior_Fall/wellspokn/src/components/NewSpeech.jsx"],"names":["React","PropTypes","makeStyles","Avatar","List","ListItem","ListItemAvatar","ListItemText","DialogTitle","Dialog","UploadIcon","MicIcon","blue","Fab","AddIcon","options","useStyles","theme","avatar","backgroundColor","color","fab","position","margin","spacing","bottom","right","SimpleDialog","props","classes","onClose","selectedValue","open","handleClose","handleListItemClick","value","map","option","propTypes","func","isRequired","bool","string","NewSpeech","useState","setOpen","setSelectedValue","handleClickOpen"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Dialog from '@material-ui/core/Dialog';\nimport UploadIcon from '@material-ui/icons/Publish';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { blue } from '@material-ui/core/colors';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\n\nconst options = ['Record New Speech', 'Upload Existing Speech'];\nconst useStyles = makeStyles(theme => ({\n\tavatar: {\n\t\tbackgroundColor: blue[100],\n\t\tcolor: blue[600],\n\t},\n\tfab: {\n\t\tposition: 'absolute',\n\t\tmargin: theme.spacing(1),\n\t\tbottom: theme.spacing(2),\n\t\tright: theme.spacing(2),\n\t},\n}));\n\nfunction SimpleDialog(props) {\n\tconst classes = useStyles();\n\tconst { onClose, selectedValue, open } = props;\n\n\tconst handleClose = () => {\n\t\tonClose(selectedValue);\n\t};\n\n\tconst handleListItemClick = value => {\n\t\tonClose(value);\n\t};\n\n\treturn (\n\t\t<Dialog onClose={handleClose} aria-labelledby=\"simple-dialog-title\" open={open}>\n\t\t\t<DialogTitle id=\"simple-dialog-title\">Create New Project</DialogTitle>\n\t\t\t<List>\n\t\t\t\t{options.map(option => (\n\t\t\t\t\t<ListItem button onClick={() => handleListItemClick(option)} key={option}>\n\t\t\t\t\t\t<ListItemAvatar>\n\t\t\t\t\t\t\t<Avatar className={classes.avatar}>\n\t\t\t\t\t\t\t\t{option === 'Record New Speech' && <MicIcon />}\n\t\t\t\t\t\t\t\t{option === 'Upload Existing Speech' && <UploadIcon />}\n\t\t\t\t\t\t\t</Avatar>\n\t\t\t\t\t\t</ListItemAvatar>\n\t\t\t\t\t\t<ListItemText primary={option} />\n\t\t\t\t\t</ListItem>\n\t\t\t\t))}\n\t\t\t</List>\n\t\t</Dialog>\n\t);\n}\n\nSimpleDialog.propTypes = {\n\tonClose: PropTypes.func.isRequired,\n\topen: PropTypes.bool.isRequired,\n\tselectedValue: PropTypes.string.isRequired,\n};\n\nexport default function NewSpeech() {\n\tconst classes = useStyles();\n\tconst [open, setOpen] = React.useState(false);\n\tconst [selectedValue, setSelectedValue] = React.useState(options[1]);\n\n\tconst handleClickOpen = () => {\n\t\tsetOpen(true);\n\t};\n\n\tconst handleClose = value => {\n\t\tsetOpen(false);\n\t\tsetSelectedValue(value);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={handleClickOpen}>\n\t\t\t\t<AddIcon />\n\t\t\t</Fab>\n\t\t\t<SimpleDialog selectedValue={selectedValue} open={open} onClose={handleClose} />\n\t\t</div>\n\t);\n}"]},"metadata":{},"sourceType":"module"}