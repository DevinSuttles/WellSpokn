{"ast":null,"code":"import _defineProperty from \"/home/connor/Documents/Senior_Fall/wellspokn/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/connor/Documents/Senior_Fall/wellspokn/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/connor/Documents/Senior_Fall/wellspokn/src/Pages/Settings.jsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Grid from '@material-ui/core/Grid';\nimport NavBar from '.././components/NavBar';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Switch from '@material-ui/core/Switch';\nconst useStyles = makeStyles({\n  card: {\n    minWidth: 275,\n    margin: 30\n  }\n});\nexport default function Settings(props) {\n  const classes = useStyles();\n\n  const searchSpeeches = searchTerm => {//will eventually look for word and highlight\n  };\n\n  const _React$useState = React.useState({\n    dark: false\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  const handleChange = name => event => {\n    setState(_objectSpread({}, state, {\n      [name]: event.target.checked\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(NavBar, {\n    SearchSpeeches: searchSpeeches,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    id: \"cards\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    spacing: 2,\n    direction: \"row\",\n    justify: \"flex-start\",\n    alignItems: \"baseline\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: \"auto\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(FormControl, {\n    component: \"fieldset\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(FormLabel, {\n    component: \"legend\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Settings\"), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(FormControlLabel, {\n    control: React.createElement(Switch, {\n      checked: state.dark,\n      onChange: handleChange('dark'),\n      value: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }),\n    label: \"Dark Mode\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(FormHelperText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }))))))));\n}","map":{"version":3,"sources":["/home/connor/Documents/Senior_Fall/wellspokn/src/Pages/Settings.jsx"],"names":["React","useState","useEffect","makeStyles","Card","CardActions","CardContent","ButtonBase","Grid","NavBar","FormLabel","FormControl","FormGroup","FormControlLabel","FormHelperText","Switch","useStyles","card","minWidth","margin","Settings","props","classes","searchSpeeches","searchTerm","dark","state","setState","handleChange","name","event","target","checked"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,gBAAP,MAA6B,oCAA7B;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,MAAMC,SAAS,GAAGb,UAAU,CAAC;AAC5Bc,EAAAA,IAAI,EAAE;AACLC,IAAAA,QAAQ,EAAE,GADL;AAELC,IAAAA,MAAM,EAAE;AAFH;AADsB,CAAD,CAA5B;AAMA,eAAe,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACvC,QAAMC,OAAO,GAAGN,SAAS,EAAzB;;AAEA,QAAMO,cAAc,GAAIC,UAAD,IAAgB,CACtC;AACA,GAFD;;AAHuC,0BAObxB,KAAK,CAACC,QAAN,CAAe;AACxCwB,IAAAA,IAAI,EAAE;AADkC,GAAf,CAPa;AAAA;AAAA,QAOhCC,KAPgC;AAAA,QAOzBC,QAPyB;;AAWvC,QAAMC,YAAY,GAAGC,IAAI,IAAIC,KAAK,IAAI;AACrCH,IAAAA,QAAQ,mBAAMD,KAAN;AAAa,OAACG,IAAD,GAAQC,KAAK,CAACC,MAAN,CAAaC;AAAlC,OAAR;AACA,GAFD;;AAIA,SACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,MAAD;AAAQ,IAAA,cAAc,EAAET,cAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,EAEC;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AACC,IAAA,SAAS,EAAC,KADX;AAEC,IAAA,OAAO,EAAC,YAFT;AAGC,IAAA,UAAU,EAAC,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIC,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAED,OAAO,CAACL,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAC,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,EAEC,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,gBAAD;AACC,IAAA,OAAO,EAAE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAES,KAAK,CAACD,IAAvB;AAA6B,MAAA,QAAQ,EAAEG,YAAY,CAAC,MAAD,CAAnD;AAA6D,MAAA,KAAK,EAAC,MAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADV;AAEC,IAAA,KAAK,EAAC,WAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CAFD,EAQC,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARD,CADD,CADD,CADD,CAJD,CADD,CAFD,CADD;AA4BA","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Grid from '@material-ui/core/Grid';\nimport NavBar from '.././components/NavBar';\n\nimport FormLabel from '@material-ui/core/FormLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Switch from '@material-ui/core/Switch';\n\nconst useStyles = makeStyles({\n\tcard: {\n\t\tminWidth: 275,\n\t\tmargin: 30,\n\t},\n});\nexport default function Settings(props) {\n\tconst classes = useStyles();\n\n\tconst searchSpeeches = (searchTerm) => {\n\t\t//will eventually look for word and highlight\n\t}\n\n\tconst [state, setState] = React.useState({\n\t\tdark: false,\n\t});\n\n\tconst handleChange = name => event => {\n\t\tsetState({ ...state, [name]: event.target.checked });\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<NavBar SearchSpeeches={searchSpeeches} />\n\t\t\t<div id=\"cards\">\n\t\t\t\t<Grid container spacing={2}\n\t\t\t\t\tdirection=\"row\"\n\t\t\t\t\tjustify=\"flex-start\"\n\t\t\t\t\talignItems=\"baseline\">\n\t\t\t\t\t<Grid item xs={\"auto\"}>\n\t\t\t\t\t\t<Card className={classes.card}>\n\t\t\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t\t\t<FormControl component=\"fieldset\">\n\t\t\t\t\t\t\t\t\t<FormLabel component=\"legend\">Settings</FormLabel>\n\t\t\t\t\t\t\t\t\t<FormGroup>\n\t\t\t\t\t\t\t\t\t\t<FormControlLabel\n\t\t\t\t\t\t\t\t\t\t\tcontrol={<Switch checked={state.dark} onChange={handleChange('dark')} value=\"dark\" />}\n\t\t\t\t\t\t\t\t\t\t\tlabel=\"Dark Mode\"\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t</FormGroup>\n\t\t\t\t\t\t\t\t\t<FormHelperText></FormHelperText>\n\t\t\t\t\t\t\t\t</FormControl>\n\t\t\t\t\t\t\t</CardContent>\n\t\t\t\t\t\t</Card>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</div>\n\t);\n}"]},"metadata":{},"sourceType":"module"}