{"ast":null,"code":"var _jsxFileName = \"/home/connor/Documents/Senior_Fall/wellspokn/src/components/Recorder.jsx\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ReactMic } from 'react-mic';\nimport Button from '@material-ui/core/Button';\nexport default class Recorder extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.startRecording = () => {\n      this.setState({\n        record: true\n      });\n    };\n\n    this.stopRecording = () => {\n      this.setState({\n        record: false\n      });\n    };\n\n    this.state = {\n      record: false\n    };\n  }\n\n  onData(recordedBlob) {\n    console.log('chunk of real-time data is: ', recordedBlob);\n  }\n\n  onStop(recordedBlob) {\n    console.log('recordedBlob is: ', recordedBlob);\n    const audio = new Audio(recordedBlob.blobURL);\n    audio.play();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      style: {\n        margin: '20px',\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, React.createElement(ReactMic, {\n      record: this.state.record,\n      className: \"sound-wave\",\n      onStop: this.onStop,\n      onData: this.onData,\n      strokeColor: \"#000000\",\n      backgroundColor: \"white\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.startRecording,\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"Start\"), React.createElement(Button, {\n      onClick: this.stopRecording,\n      style: {\n        textAlign: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Stop\"));\n  }\n\n}","map":{"version":3,"sources":["/home/connor/Documents/Senior_Fall/wellspokn/src/components/Recorder.jsx"],"names":["React","makeStyles","ReactMic","Button","Recorder","Component","constructor","props","startRecording","setState","record","stopRecording","state","onData","recordedBlob","console","log","onStop","audio","Audio","blobURL","play","render","margin","textAlign"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAOnBC,cAPmB,GAOF,MAAM;AACrB,WAAKC,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE;AADI,OAAd;AAGD,KAXkB;;AAAA,SAanBC,aAbmB,GAaH,MAAM;AACpB,WAAKF,QAAL,CAAc;AACZC,QAAAA,MAAM,EAAE;AADI,OAAd;AAGD,KAjBkB;;AAEjB,SAAKE,KAAL,GAAa;AACXF,MAAAA,MAAM,EAAE;AADG,KAAb;AAGD;;AAcDG,EAAAA,MAAM,CAACC,YAAD,EAAe;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EAA4CF,YAA5C;AACD;;AAEDG,EAAAA,MAAM,CAACH,YAAD,EAAe;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCF,YAAjC;AACA,UAAMI,KAAK,GAAG,IAAIC,KAAJ,CAAUL,YAAY,CAACM,OAAvB,CAAd;AACGF,IAAAA,KAAK,CAACG,IAAN;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,MAAM,EAAE,MAAT;AAAiBC,QAAAA,SAAS,EAAE;AAA5B,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,QAAD;AACE,MAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWF,MADrB;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,MAAM,EAAE,KAAKO,MAHf;AAIE,MAAA,MAAM,EAAE,KAAKJ,MAJf;AAKE,MAAA,WAAW,EAAC,SALd;AAME,MAAA,eAAe,EAAC,OANlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAQE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKL,cAAtB;AAAsC,MAAA,KAAK,EAAE;AAACgB,QAAAA,SAAS,EAAE;AAAZ,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eARF,EASE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAE,KAAKb,aAAtB;AAAqC,MAAA,KAAK,EAAE;AAACa,QAAAA,SAAS,EAAE;AAAZ,OAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATF,CADF;AAaD;;AA5CmD","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { ReactMic } from 'react-mic';\nimport Button from '@material-ui/core/Button'\n \nexport default class Recorder extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      record: false\n\t}\n  }\n \n  startRecording = () => {\n    this.setState({\n      record: true\n    });\n  }\n \n  stopRecording = () => {\n    this.setState({\n      record: false\n    });\n  }\n \n  onData(recordedBlob) {\n    console.log('chunk of real-time data is: ', recordedBlob);\n  }\n \n  onStop(recordedBlob) {\n\tconsole.log('recordedBlob is: ', recordedBlob);\n\tconst audio = new Audio(recordedBlob.blobURL);\n    audio.play();\n  }\n \n  render() {\n    return (\n      <div style={{margin: '20px', textAlign: 'center',}}>\n        <ReactMic\n          record={this.state.record}\n          className=\"sound-wave\"\n          onStop={this.onStop}\n          onData={this.onData}\n          strokeColor=\"#000000\"\n          backgroundColor=\"white\" />\n        <Button onClick={this.startRecording} style={{textAlign: 'center',}} >Start</Button>\n        <Button onClick={this.stopRecording} style={{textAlign: 'center',}} >Stop</Button>\n      </div>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}